{"version":3,"sources":["components/todo-input/input/ToDoInput.js","constants.js","components/todo-input/select/ToDoSelect.js","components/todo-input/textarea/ToDoTextArea.js","components/todo-input/button/Button.js","components/footer/Footer.js","components/todo-item/ToDoItem.js","components/todo-list/ToDoList.js","containers/Todo.js","actions/actionCreator.js","components/title/Title.js","App.js","serviceWorker.js","reducers/tasks.js","store.js","reducers/filters.js","reducers/index.js","index.js"],"names":["ToDoInput","_ref","value","onChange","onKeyPress","type","react_default","a","createElement","className","defaultProps","FILTERS_BTN","text","id","USERS","title","ToDoSelect","map","_ref2","key","concat","ToDoTextArea","cols","rows","placeholder","Button","children","onClick","disabled","active","attrs","Object","objectWithoutProperties","classes","classNames","Tag","href","assign","e","preventDefault","Footer","amount","activeFilter","changeFilter","defaulProps","ToDoItem","data","description","responsible","isCompleted","deleteTask","completeTask","ToDoList","tasksList","components_todo_item_ToDoItem","ToDo","state","taskText","textAreaText","taskData","selectText","handleInputChange","target","_this","setState","handleInputDataChange","handleSelectChange","_ref3","handleTextAreaChange","_ref4","addTask","_this$state","length","props","Date","getTime","getActiveTasksCounter","tasks","filter","task","filterTasks","_this$state2","this","_this$props","filters","isTasksExist","filteredTasks","taskCounter","todo_input_input_ToDoInput","todo_input_textarea_ToDoTextArea","todo_input_select_ToDoSelect","todo_input_button_Button","components_footer_Footer","components_todo_list_ToDoList","Component","connect","_ref5","Title","App","react","components_title_Title","containers_Todo","Boolean","window","location","hostname","match","TASKS","load","namespace","preloadedState","arguments","undefined","toConsumableArray","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fdb76b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToDoInput.css';\r\n\r\nconst ToDoInput = ({ value, onChange, onKeyPress, type }) => (\r\n\t<div className=\"todo-input-wrapper\">\r\n\t\t<span className=\"input input--isao\">\r\n\t\t\t<input\r\n\t\t\t\ttype={type}\r\n\t\t\t\tclassName=\"input__field input__field--isao\"\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonKeyPress={onKeyPress}\r\n\t\t\t/>\r\n\t\t\t<label className=\"input__label input__label--isao\">\r\n\t\t\t\t<span className=\"input__label-content input__label-content--isao\">Enter text to task</span>\r\n\t\t\t</label>\r\n\t\t</span>\r\n\t</div>\r\n);\r\n\r\nToDoInput.propTypes = {\r\n\tonChange: PropTypes.func,\r\n\tonKeyPress: PropTypes.func,\r\n\tvalue: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n};\r\n\r\nToDoInput.defaultProps = {\r\n\tonChange: () => {},\r\n\tonKeyPress: () => {},\r\n\tvalue: '',\r\n\ttype: '',\r\n};\r\n\r\nexport default ToDoInput;\r\n\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const EXPANSION_TASK = 'EXPANSION_TASK';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\n\r\nexport const FILTERS_BTN = [\r\n\t{\r\n\t\ttext: 'All',\r\n\t\tid: 'all'\r\n\t},\r\n\t{\r\n\t\ttext: 'Active',\r\n\t\tid: 'active'\r\n\t},\r\n\t{\r\n\t\ttext: 'Completed',\r\n\t\tid: 'completed'\r\n\t}\r\n];\r\n\r\nexport const USERS = [\r\n\t{\r\n\t\tid: '1',\r\n\t\tvalue: 'Vladislav',\r\n\t\ttitle: 'Vladislav'\r\n\t},\r\n\t{\r\n\t\tid: '2',\r\n\t\tvalue: 'Platon',\r\n\t\ttitle: 'Platon'\r\n\t},\r\n\t{\r\n\t\tid: '3',\r\n\t\tvalue: 'Ivan',\r\n\t\ttitle: 'Ivan'\r\n\t}\r\n];\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {USERS} from '../../../constants';\n\nimport './ToDoSelect.css';\n\nconst ToDoSelect = ({value, onChange}) => (\n\t<div className=\"todo-select-wrapper\">\n\t\t<select className=\"todo-select\" onChange={onChange} value={value}>\n\t\t\t{USERS.map(({id, value, title}) => (\n\t\t\t\t<option key={`${id} - ${value}`} value={value}>{title}</option>\n\t\t\t\t))}\n\t\t</select>\n\t</div>\n);\n\nToDoSelect.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func\n};\n\nToDoSelect.defaultProps ={\n\tvalue: '',\n\tonChange: () => {}\n};\n\nexport default ToDoSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ToDoTextArea.css';\n\nconst ToDoTextArea = ({value, onChange}) => (\n\t<div className=\"todo-textarea-wrapper\">\n\t\t<textarea className=\"todo-textarea\" onChange={onChange} value={value} cols=\"70\" rows=\"6\"\n\t\t\t\t  placeholder=\"Write a detailed description of the task\"></textarea>\n\t</div>\n);\n\nToDoTextArea.propTypes = {\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func\n};\n\nToDoTextArea.defaultProps = {\n\tvalue: '',\n\tonChange: () => {}\n};\n\nexport default ToDoTextArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Button.css';\n\nconst Button = ({\n\t\t\t\t\tchildren, onClick, className, disabled, active, ...attrs\n\t\t\t\t}) => {\n\tconst onClickAction = e => {\n\t\tif (disabled) {\n\t\t\te.preventDefault();\n\t\t} else {\n\t\t\treturn onClick(e);\n\t\t}\n\t};\n\n\tconst classes = classNames(\n\t\t'button button--pipaluk button--text-thick',\n\t\tclassName,\n\t\t{ active },\n\t);\n\n\tconst Tag = attrs.href ? 'a' : 'button';\n\n\treturn (\n\t\t<Tag\n\t\t\tclassName={classes}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClickAction}\n\t\t\t{...attrs}\n\t\t>\n\t\t\t{children}\n\t\t</Tag>\n\t);\n};\n\nButton.propTypes = {\n\tchildren: PropTypes.node,\n\tonClick: PropTypes.func,\n\tclassName: PropTypes.string,\n\tdisabled: PropTypes.bool,\n\tactive: PropTypes.bool,\n};\n\nButton.defaultProps = {\n\tchildren: 'Default button',\n\tonClick: () => {},\n\tclassName: '',\n\tdisabled: false,\n\tactive: false,\n};\n\nexport default Button;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FILTERS_BTN} from '../../constants';\r\n\r\nimport './Footer.css';\r\n\r\nconst Footer = ({amount, activeFilter, changeFilter}) => (\r\n\t<div className=\"footer\">\r\n\t\t<span className=\"amount\">{`${amount} Task left`}</span>\r\n\t\t<div className=\"btn-group\">\r\n\t\t\t{FILTERS_BTN.map(({id, text}) =>\r\n\t\t\t\t<button onClick={() => {changeFilter(id)}} key={id}\r\n\t\t\t\t\t\tclassName={id === activeFilter ? \"filter-btn active\" : 'filter-btn'}>\r\n\t\t\t\t\t{text}</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nFooter.propTypes  = {\r\n\tamount: PropTypes.number,\r\n\tactiveFilter: PropTypes.string,\r\n\tchangeFilter: PropTypes.func\r\n};\r\n\r\nFooter.defaulProps = {\r\n\tamount: 0,\r\n\tactiveFilter: 'all',\r\n\tchangeFilter: () => {},\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ToDoItem.css';\r\n\r\nconst ToDoItem = ({text, data, description, responsible, isCompleted, deleteTask, completeTask, id }) => (\r\n\r\n\t<div className=\"todo-item-div\">\r\n\t\t<li  className='todo-item'>\r\n\t\t\t<i onClick={ () => completeTask(id) } className={isCompleted ? 'mark far fa-check-circle' : 'mark far fa-circle'} />\r\n\t\t\t<span className={isCompleted ? 'completed text' : 'text'}>{text}</span>\r\n\t\t\t<span className={isCompleted ? 'completed text' : 'text'}>{responsible}</span>\r\n\t\t\t<span className={isCompleted ? 'completed text' : 'text'}>{data}</span>\r\n\t\t\t<div className=\"description\">\r\n\t\t\t\t<p className={isCompleted ? 'completed text' : 'text_descr'}>{description}</p>\r\n\t\t\t</div>\r\n\t\t\t<i onClick={ () => deleteTask(id) } className=\"fas fa-times\" />\r\n\t\t</li>\r\n\t</div>\r\n);\r\n\r\nToDoItem.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tdata: PropTypes.string,\r\n\tdescription: PropTypes.string,\r\n\tresponsible: PropTypes.string,\r\n\tisCompleted: PropTypes.bool,\r\n\tdeleteTask: PropTypes.func,\r\n\tcompleteTask: PropTypes.func,\r\n\tid: PropTypes.number\r\n};\r\n\r\nToDoItem.defaultProps = {\r\n\ttext: '',\r\n\tdata: '1999-08-30',\r\n\tdescription: '',\r\n\tresponsible: '',\r\n\tisCompleted: false,\r\n\tdeleteTask: () => {},\r\n\tcompleteTask: () => {},\r\n\tid: 0\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport ToDoItem from '../todo-item/ToDoItem';\r\nimport './ToDoList.css';\r\n\r\nconst ToDoList = ({tasksList, deleteTask, completeTask}) => (\r\n\t\t<ul className=\"todo-list\">\r\n\t\t\t{tasksList.map(({ id, text, data, description, responsible, isCompleted }) => (\r\n\t\t\t\t<ToDoItem completeTask={completeTask} deleteTask={deleteTask} id={id} key={id} text={text} data={data}\r\n\t\t\t\t\t\t  description={description}\t responsible={responsible}  isCompleted={isCompleted}/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n);\r\n\r\nToDoList.propTypes = {\r\n\ttasksList: PropTypes.array,\r\n\tdeleteTask: PropTypes.func,\r\n\tcompleteTask: PropTypes.func\r\n};\r\n\r\nToDoList.defaultProps = {\r\n\ttasksList: [],\r\n\tdeleteTask: () => {},\r\n\tcompleteTask: () => {}\r\n};\r\n\r\n\r\nexport default ToDoList;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ToDoInput from '../components/todo-input/input/ToDoInput';\r\nimport ToDoSelect from '../components/todo-input/select/ToDoSelect';\r\nimport ToDoTextArea from '../components/todo-input/textarea/ToDoTextArea';\r\nimport Button from '../components/todo-input/button/Button';\r\nimport Footer from '../components/footer/Footer';\r\nimport ToDoList from '../components/todo-list/ToDoList';\r\n\r\nimport {addTask, deleteTask, completeTask, changeFilter} from \"../actions/actionCreator\";\r\nimport './Todo.css';\r\n\r\nclass ToDo extends Component {\r\n\r\n\tstate = {\r\n\t\ttaskText: '',\r\n\t\ttextAreaText: '',\r\n\t\ttaskData: '',\r\n\t\tselectText: ''\r\n\t};\r\n\r\n\thandleInputChange = ({ target: { value } }) => {\r\n\t\tthis.setState({\r\n\t\t\ttaskText: value,\r\n\t\t})\r\n\t};\r\n\r\n\thandleInputDataChange = ({ target: { value } }) => {\r\n\t\tthis.setState({\r\n\t\t\ttaskData: value,\r\n\t\t})\r\n\t};\r\n\r\n\thandleSelectChange = ({ target: { value } }) => {\r\n\t\tthis.setState({\r\n\t\t\tselectText: value,\r\n\t\t})\r\n\t};\r\n\r\n\thandleTextAreaChange = ({ target: { value } }) => {\r\n\t\tthis.setState({\r\n\t\t\ttextAreaText: value,\r\n\t\t})\r\n\t};\r\n\r\n\taddTask = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { taskText, textAreaText, taskData, selectText } = this.state;\r\n\r\n\t\tif (taskText.length > 3 && textAreaText.length < 45) {\r\n\t\t\tconst { addTask } = this.props;\r\n\r\n\t\t\taddTask((new Date()).getTime(), taskText, taskData, textAreaText, selectText, false);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttaskText: '',\r\n\t\t\t\ttaskData: '',\r\n\t\t\t\ttextAreaText: '',\r\n\t\t\t\tselectText: ''\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tgetActiveTasksCounter = tasks => tasks.filter(task => !task.isCompleted).length;\r\n\r\n\tfilterTasks = (tasks, activeFilter) => {\r\n\t\tswitch (activeFilter) {\r\n\t\t\tcase 'completed':\r\n\t\t\t\treturn tasks.filter(task => task.isCompleted);\r\n\t\t\tcase 'active':\r\n\t\t\t\treturn tasks.filter(task => !task.isCompleted);\r\n\t\t\tdefault:\r\n\t\t\t\treturn tasks;\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { taskText, textAreaText, taskData, selectText } = this.state;\r\n\t\tconst { tasks, deleteTask, completeTask, filters, changeFilter } = this.props;\r\n\t\tconst isTasksExist = tasks && tasks.length > 0;\r\n\t\tconst filteredTasks = this.filterTasks(tasks, filters);\r\n\t\tconst taskCounter = this.getActiveTasksCounter(tasks);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"todo-wrapper\">\r\n\t\t\t\t<div className=\"todo-form\">\r\n\t\t\t\t\t<ToDoInput onChange={this.handleInputChange} value={taskText} type=\"text\" />\r\n\t\t\t\t\t<ToDoInput onChange={this.handleInputDataChange} value={taskData} type=\"date\" />\r\n\t\t\t\t\t<ToDoTextArea value={textAreaText} onChange={this.handleTextAreaChange} />\r\n\t\t\t\t\t<ToDoSelect value={selectText} onChange={this.handleSelectChange} />\r\n\t\t\t\t\t<Button onClick={this.addTask}>Add task</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{isTasksExist && <Footer changeFilter={changeFilter} amount={taskCounter} activeFilter={filters} />}\r\n\t\t\t\t{isTasksExist && <ToDoList completeTask={completeTask} tasksList={filteredTasks} deleteTask={deleteTask} />}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(({tasks, filters}) => ({\r\n\ttasks,\r\n\tfilters,\r\n}), { addTask, deleteTask, completeTask, changeFilter})(ToDo);\r\n","import {ADD_TASK, DELETE_TASK, COMPLETE_TASK, CHANGE_FILTER} from \"../constants\";\r\n\r\n\r\nexport const addTask = (id, text, data, description, responsible, isCompleted) => ({\r\n\ttype: ADD_TASK,\r\n\tid,\r\n\ttext,\r\n\tdata,\r\n\tdescription,\r\n\tresponsible,\r\n\tisCompleted,\r\n});\r\n\r\nexport const deleteTask = id => ({\r\n\ttype: DELETE_TASK,\r\n\tid\r\n});\r\n\r\nexport const completeTask = id => ({\r\n\ttype: COMPLETE_TASK,\r\n\tid\r\n});\r\n\r\nexport const changeFilter = activeFilter => ({\r\n\ttype: CHANGE_FILTER,\r\n\tactiveFilter\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Title.css';\r\n\r\nconst Title = ({title}) => (\r\n\t<h1 className=\"link link--kukuri\">{title}</h1>\r\n);\r\n\r\nTitle.propTypes = {\r\n\ttitle: PropTypes.string\r\n};\r\n\r\nTitle.defaultProps = {\r\n\ttitle: 'Simple title'\r\n};\r\n\r\nexport default Title;\r\n","import React,{Fragment} from 'react';\r\nimport ToDo from './containers/Todo';\r\nimport Title from './components/title/Title';\r\n\r\nconst App = () => (\r\n\t<Fragment>\r\n\t\t<Title title=\"ToDo Application\" />\r\n\t\t<ToDo />\r\n\t</Fragment>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TASK, COMPLETE_TASK, DELETE_TASK} from \"../constants\";\r\nimport {load} from 'redux-localstorage-simple';\r\n\r\nlet TASKS = load({ namespace: 'todo-list' });\r\n\r\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\r\n\tTASKS = {\r\n\t\ttasks: [],\r\n\t}\r\n}\r\n\r\nconst tasks = (state = TASKS.tasks, { id, text, data, description, responsible, isCompleted, type }) => {\r\n\tswitch (type) {\r\n\t\tcase ADD_TASK :\r\n\t\t\treturn [\r\n\t\t\t\t...state, {\r\n\t\t\t\t\tid,\r\n\t\t\t\t\ttext,\r\n\t\t\t\t\tdata,\r\n\t\t\t\t\tdescription,\r\n\t\t\t\t\tresponsible,\r\n\t\t\t\t\tisCompleted,\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\tcase DELETE_TASK :\r\n\t\t\treturn [...state].filter(task => task.id !== id);\r\n\t\tcase COMPLETE_TASK :\r\n\t\t\treturn [...state].map(task => {\r\n\t\t\t\tif( task.id === id){\r\n\t\t\t\t\ttask.isCompleted = !task.isCompleted;\r\n\t\t\t\t}\r\n\t\t\t\treturn task;\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default tasks;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport {save} from 'redux-localstorage-simple';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\n\tprocess.env.NODE_ENV !== 'production' &&\r\n\ttypeof window === 'object' &&\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n\tcreateStore(\r\n\t\trootReducer,\r\n\t\tpreloadedState,\r\n\t\tcomposeEnhancers(\r\n\t\t\tapplyMiddleware(save({ namespace: 'todo-list'}))\r\n\t\t),\r\n\t)\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import { CHANGE_FILTER } from '../constants';\r\n\r\nconst BASE_FILTER = 'all';\r\n\r\nconst filter = (state = BASE_FILTER, { type, activeFilter }) => {\r\n\tswitch (type) {\r\n\t\tcase CHANGE_FILTER:\r\n\t\t\treturn activeFilter;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default filter;\r\n","import { combineReducers } from 'redux';\r\nimport tasks from './tasks';\r\nimport filters from './filters';\r\n\r\nconst rootReducer = combineReducers({tasks, filters});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render((\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n), document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}